---
# - hosts: all
#   gather_facts: false
#   connection: gcp_ssh
#   tasks:
#     - name: "Retrieve hostname"
#       # changed_when: false
#       ansible.builtin.command:
#         cmd: hostname
#       register: hostname_output

#     - name: "Debug hostname"
#       ansible.builtin.debug:
#         var: hostname_output.stdout

    

- name: Install unzip
  hosts: all
  connection: gcp_ssh
  gather_facts: false
  become: true
  tasks:
    - name: Install unzip
      apt:
        name: unzip
        state: present
        update_cache: yes

#     - name: Install pip
#       apt:
#         name: python3-pip
#         state: present
#         update_cache: yes


- name: Install NodeJS 20 
  hosts: all
  connection: gcp_ssh
  gather_facts: false
  become: true
  roles:
    - name: nodesource.node
  vars:
    nodejs_version: 20.x

- name: Create users
  hosts: all
  gather_facts: true
  connection: gcp_ssh
  become: yes
  vars:
    user_management:
      - name: action-runner
        groups:
          - sudo
  roles:
    - name: monolithprojects.user_management
        

- name: Install GitHub Actions Runner
  hosts: all
  connection: gcp_ssh
  gather_facts: true
  become: yes
  vars:
    github_account: "{{ lookup('env', 'GITHUB_ORG') }}"
    # github_repo: "{{ lookup('env', 'GITHUB_REPO') }}"
    access_token: "{{ lookup('env', 'NEW_ORG_TOKEN') }}"
    runner_user: "action-runner"
    runner_org: true
    runner_group: "Capstone-group"
    reinstall_runner: true
  roles:
    - name: ansible-github_actions_runner


- name: Install Docker
  hosts: all
  connection: gcp_ssh
  gather_facts: true
  become: yes
  roles:
    - name: geerlingguy.docker
      vars:
        docker_users:
          - action-runner
        docker_install_compose_plugin: false