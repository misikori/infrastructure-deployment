---
# - hosts: all
#   gather_facts: false
#   connection: gcp_ssh
#   tasks:
#     - name: "Retrieve hostname"
#       # changed_when: false
#       ansible.builtin.command:
#         cmd: hostname
#       register: hostname_output

#     - name: "Debug hostname"
#       ansible.builtin.debug:
#         var: hostname_output.stdout

# - name: Install necessary packages
#   hosts: all
#   connection: gcp_ssh
#   become: true
#   gather_facts: false
#   tasks:
#     - name: Install git
#       apt:
#         name: git
#         state: present
#         update_cache: yes
#     - name: Install unzip
#       apt:
#         name: unzip
#         state: present
#         update_cache: yes
    
#     - name: Install pip
#       apt:
#         name: python3-pip
#         state: present
#         update_cache: yes
      
# - name: Install numpy
#   hosts: all
#   connection: gcp_ssh
#   gather_facts: false
#   become: true
#   tasks:
#     - name: installing numpy
#       ansible.builtin.pip:
#         name: numpy
#         extra_args: --user

# - name: Install NodeJS 20 
#   hosts: all
#   connection: gcp_ssh
#   gather_facts: false
#   become: true
#   roles:
#     - name: nodesource.node
#   vars:
#     nodejs_version: 20.x


# - name: Install Terraform
#   hosts: all
#   connection: gcp_ssh
#   become: true
#   gather_facts: false
#   roles:
#     - name: diodonfrost.terraform
#       vars:
#         ansible_system: Linux
#         ansible_architecture: amd64

- name: Install GitHub Actions Runner
  hosts: all
  connection: gcp_ssh
  gather_facts: true
  become: yes
  vars:
    github_account: "{{ lookup('env', 'GITHUB_ORG') }}"
    # github_repo: "{{ lookup('env', 'GITHUB_REPO') }}"
    access_token: "{{ lookup('env', 'ORG_ACCESS_TOKEN') }}"
    runner_org: true
    runner_group: "Capstone-group"
  roles:
    - name: ansible-github_actions_runner